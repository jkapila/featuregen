
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "example_gallery/plot_grouped_transformation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_example_gallery_plot_grouped_transformation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_example_gallery_plot_grouped_transformation.py:


Grouped Varaible Transformation Example
=======================================

A group wise behaviour is very common in panel data. Now making transofmration on
whole from one prespectives would not be ideal and may cause more harm than solving the
scaling problem.

To keep the consistency of the transformation within groups GroupedVariableTransformation
can be used. Following is very minimilatic example of the same.

.. GENERATED FROM PYTHON SOURCE LINES 13-23

.. code-block:: default
   :lineno-start: 15



    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd

    from featuregen import GroupedVariableTransformation


    plt.style.use("seaborn-white")







.. GENERATED FROM PYTHON SOURCE LINES 24-25

Creating a grouped data set with range differnece in values

.. GENERATED FROM PYTHON SOURCE LINES 25-32

.. code-block:: default
   :lineno-start: 25

    df = pd.DataFrame(
        {
            "attribute": ["A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B"],
            "value": [1, 2, 4, 5, 3, 6, 100, 33, 44, 77, 77, 99],
        }
    )
    print(df)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

       attribute  value
    0          A      1
    1          A      2
    2          A      4
    3          A      5
    4          A      3
    5          A      6
    6          B    100
    7          B     33
    8          B     44
    9          B     77
    10         B     77
    11         B     99




.. GENERATED FROM PYTHON SOURCE LINES 33-34

Instantiating model calss with relevtant attributes

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default
   :lineno-start: 34

    gvt = GroupedVariableTransformation(key="attribute", target="value")
    print(gvt)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Variable Transformer (key=attribute, target=value, strategy=zscore)




.. GENERATED FROM PYTHON SOURCE LINES 38-39

Fitting our grouped data in transformer

.. GENERATED FROM PYTHON SOURCE LINES 39-41

.. code-block:: default
   :lineno-start: 39

    gvt.fit(df)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Variable Transformer (key=attribute, target=value, strategy=zscore)



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Transforming data toe scale with zscore strategy

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: default
   :lineno-start: 43

    df["value_tr"] = gvt.transform(df)
    print(df)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

       attribute  value  value_tr
    0          A      1 -1.463850
    1          A      2 -0.878310
    2          A      4  0.292770
    3          A      5  0.878310
    4          A      3 -0.292770
    5          A      6  1.463850
    6          B    100  1.116008
    7          B     33 -1.523023
    8          B     44 -1.089749
    9          B     77  0.210072
    10         B     77  0.210072
    11         B     99  1.076620




.. GENERATED FROM PYTHON SOURCE LINES 47-48

Inverse transforming the  data back based on groupwise learned scale.

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: default
   :lineno-start: 48

    df_inv = gvt.inverse_transform(df, target="value_tr")
    print(df_inv)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    0       1.0
    1       2.0
    2       4.0
    3       5.0
    4       3.0
    5       6.0
    6     100.0
    7      33.0
    8      44.0
    9      77.0
    10     77.0
    11     99.0
    dtype: float64




.. GENERATED FROM PYTHON SOURCE LINES 52-54

Validate values are same
np.allclose(df['value'].values,df_inv['value'].values)

.. GENERATED FROM PYTHON SOURCE LINES 56-57

Lets see how does the variable transformation looks within each group

.. GENERATED FROM PYTHON SOURCE LINES 57-61

.. code-block:: default
   :lineno-start: 57

    groups = df.groupby("attribute")
    for name, group in groups:
        plt.plot(group["value"], group["value_tr"], marker="o", linestyle="", label=name)
    plt.legend(loc="lower right")



.. image:: /example_gallery/images/sphx_glr_plot_grouped_transformation_001.png
    :alt: plot grouped transformation
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa143541e10>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.091 seconds)


.. _sphx_glr_download_example_gallery_plot_grouped_transformation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_grouped_transformation.py <plot_grouped_transformation.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_grouped_transformation.ipynb <plot_grouped_transformation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
